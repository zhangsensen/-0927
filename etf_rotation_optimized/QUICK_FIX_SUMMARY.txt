═══════════════════════════════════════════════════════════════════
              昨今差异问题 - 快速参考卡片
═══════════════════════════════════════════════════════════════════

【TL;DR】
问题: 昨天vs今天回测结果66%的窗口因子不同
原因: 因子选择器排序逻辑非确定性（IC相同时顺序不稳定）
修复: 添加因子名作为二级排序键
状态: ✅ 已修复并验证（100次测试全部通过）

─────────────────────────────────────────────────────────────────

【修复的文件】
📝 core/factor_selector.py (3处修改)
  ├─ Line 188: 主排序逻辑
  ├─ Line 455: 家族配额排序
  └─ Line 300: 截断排序

【验证测试】
✅ tests/test_factor_selector_determinism.py (100次测试)
✅ tests/verify_determinism.py (完整流程3次)

【生成的文档】
📄 DIAGNOSIS_REPORT_昨今差异.md (详细诊断)
📄 FIX_REPORT_确定性修复.md (修复报告)

─────────────────────────────────────────────────────────────────

【下一步行动】

1️⃣  验证修复 (2分钟)
   cd /Users/zhangshenshen/深度量化0927/etf_rotation_optimized
   python3 tests/test_factor_selector_determinism.py

2️⃣  清空缓存 (1分钟)
   rm -rf cache/ results/wfo/

3️⃣  重建基准 (1-2小时)
   python scripts/run_all_steps.py
   # 或分步运行:
   # python scripts/step1_cross_section.py
   # python scripts/step2_factor_selection.py
   # python scripts/step3_run_wfo.py

4️⃣  验证一致性 (1-2小时)
   # 再次运行完整流程
   python scripts/run_all_steps.py
   # 对比两次结果应该完全一致

─────────────────────────────────────────────────────────────────

【关键理解】

❓ 为什么昨天和今天不同?
   → 排序逻辑在IC值相近时会产生不同结果

❓ 这是正常的吗?
   → 不正常！量化研究必须可重现

❓ 修复后会怎样?
   → 相同输入永远产生相同输出（确定性）

❓ 修复会改变策略吗?
   → 不会，只是让策略变得可重现

❓ 历史结果还有效吗?
   → 修复前的结果不可靠，建议重新运行建立新基准

─────────────────────────────────────────────────────────────────

【技术细节】

修复前:
  sorted(ic_scores.items(), key=lambda x: x[1], reverse=True)
  ↓ IC相同时顺序不确定

修复后:
  sorted(ic_scores.items(), key=lambda x: (-x[1], x[0]))
  ↓ IC相同时按因子名排序（稳定）

示例:
  {'MOM_20D': 0.050, 'CMF_20D': 0.050}
  
  修复前可能: ['MOM_20D', 'CMF_20D'] 或 ['CMF_20D', 'MOM_20D']
  修复后永远: ['CMF_20D', 'MOM_20D'] (按字母序)

─────────────────────────────────────────────────────────────────

【问题诊断数据】

对比项目:
  ├─ 昨天: 20251027_184303 (53窗口)
  └─ 今天: 20251028_174614 (55窗口)

差异统计:
  ├─ 实质因子差异: 35个窗口 (66%)
  ├─ 仅顺序差异:    7个窗口 (13%)
  └─ 完全相同:     11个窗口 (21%)

典型案例:
  窗口1: MOM_20D ↔ CMF_20D
  窗口8: 4因子 ↔ 5因子 (+RET_VOL_20D)

─────────────────────────────────────────────────────────────────

【FAQ】

Q: 修复后性能会变差吗?
A: 不会，修复只影响确定性，不影响选择逻辑

Q: 需要重新调参吗?
A: 建议重新运行建立新基准后再调参

Q: 会影响生产环境吗?
A: 修复后生产环境会更稳定（避免意外变化）

Q: 需要通知团队吗?
A: 是的，所有使用该系统的人都应该知道这个修复

═══════════════════════════════════════════════════════════════════
                    修复日期: 2025-10-28
                    修复验证: ✅ 通过
═══════════════════════════════════════════════════════════════════
