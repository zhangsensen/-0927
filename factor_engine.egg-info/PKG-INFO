Metadata-Version: 2.4
Name: factor-engine
Version: 0.2.0
Summary: 专业级因子计算引擎 - 研究与回测的统一计算核心
Author-email: 量化首席工程师 <your.email@example.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/yourusername/quant-trading
Project-URL: Repository, https://github.com/yourusername/quant-trading.git
Project-URL: Documentation, https://quant-trading.readthedocs.io
Project-URL: Bug Tracker, https://github.com/yourusername/quant-trading/issues
Keywords: quantitative,factors,backtesting,technical-analysis,trading
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Office/Business :: Financial :: Investment
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: vectorbt>=0.28.1
Requires-Dist: pandas>=2.3.2
Requires-Dist: numpy>=2.3.3
Requires-Dist: scipy>=1.16.2
Requires-Dist: scikit-learn>=1.7.2
Requires-Dist: ta-lib>=0.6.7
Requires-Dist: yfinance>=0.2.66
Requires-Dist: pyarrow>=21.0.0
Requires-Dist: fastparquet>=2024.11.0
Requires-Dist: joblib>=1.5.2
Requires-Dist: requests>=2.32.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: statsmodels>=0.14.0
Requires-Dist: pyyaml>=6.0.0
Requires-Dist: seaborn>=0.13.2
Requires-Dist: mplfinance>=0.12.10b0
Requires-Dist: polars>=1.33.1
Requires-Dist: numba>=0.62.0
Requires-Dist: pandas-vet>=2023.8.2
Requires-Dist: httpx[socks]>=0.28.1
Requires-Dist: pydantic>=2.0.0
Provides-Extra: performance
Requires-Dist: polars>=1.0.0; extra == "performance"
Requires-Dist: numba>=0.60.0; extra == "performance"
Provides-Extra: visualization
Requires-Dist: matplotlib>=3.10.6; extra == "visualization"
Requires-Dist: mplfinance>=0.12.10b0; extra == "visualization"
Requires-Dist: plotly>=5.24.0; extra == "visualization"
Requires-Dist: seaborn>=0.13.2; extra == "visualization"
Provides-Extra: web
Requires-Dist: dash>=2.18.0; extra == "web"
Requires-Dist: beautifulsoup4>=4.13.5; extra == "web"
Provides-Extra: database
Requires-Dist: sqlalchemy>=2.0.0; extra == "database"
Requires-Dist: redis>=5.0.0; extra == "database"
Provides-Extra: scheduling
Requires-Dist: schedule>=1.2.0; extra == "scheduling"
Provides-Extra: dev
Requires-Dist: pytest>=8.4.2; extra == "dev"
Requires-Dist: pytest-cov>=7.0.0; extra == "dev"
Requires-Dist: black>=25.9.0; extra == "dev"
Requires-Dist: isort>=6.0.1; extra == "dev"
Requires-Dist: mypy>=1.18.2; extra == "dev"
Requires-Dist: flake8>=7.3.0; extra == "dev"
Requires-Dist: bandit>=1.8.6; extra == "dev"
Requires-Dist: safety>=3.6.2; extra == "dev"
Requires-Dist: line-profiler>=5.0.0; extra == "dev"
Requires-Dist: memory-profiler>=0.61.0; extra == "dev"
Requires-Dist: pandas-vet>=2023.8.2; extra == "dev"
Requires-Dist: vulture>=2.14; extra == "dev"
Requires-Dist: pre-commit>=4.3.0; extra == "dev"
Requires-Dist: ipython>=9.5.0; extra == "dev"
Requires-Dist: jupyterlab>=4.4.9; extra == "dev"
Requires-Dist: notebook>=7.3.0; extra == "dev"
Provides-Extra: all
Requires-Dist: factor-engine[database,dev,performance,scheduling,visualization,web]; extra == "all"

# FactorEngine

专业级因子计算引擎 - 研究与回测的统一计算核心

## 概述

FactorEngine 是为量化交易系统设计的专业级因子计算引擎，提供统一的技术指标计算能力，确保研究、回测、组合管理等环境使用完全相同的计算逻辑。

**基于 VectorBT + TA-Lib 成熟实现**，不重复造轮子，确保与 factor_generation 计算逻辑完全一致。

## 核心特性

- ✅ **统一计算逻辑**：消除研究和回测的计算偏差
- ✅ **VectorBT驱动**：基于成熟的 VectorBT + TA-Lib，计算逻辑与 factor_generation 完全一致
- ✅ **100+技术指标**：覆盖技术分析、动量、趋势、波动率等类别
- ✅ **双层缓存系统**：内存+磁盘缓存，大幅提升性能
- ✅ **配置化部署**：支持环境变量和配置文件
- ✅ **向后兼容**：平滑迁移现有代码

## 快速开始

### 安装

```bash
# 本地开发安装
pip install -e .

# 从Git仓库安装
pip install git+ssh://git@github.com/yourorg/factor-engine.git
```

### 基本使用

```python
from factor_system.factor_engine import api
from datetime import datetime

# 计算核心技术指标
factors = api.calculate_factors(
    factor_ids=["RSI", "MACD", "STOCH"],
    symbols=["0700.HK", "0005.HK"],
    timeframe="15min",
    start_date=datetime(2025, 9, 1),
    end_date=datetime(2025, 9, 30),
)

print(f"因子数据形状: {factors.shape}")
```

## 文档

- [部署指南](FACTOR_ENGINE_DEPLOYMENT_GUIDE.md)
- [API文档](https://factor-engine.readthedocs.io)
- [示例代码](examples/)

## 版本

当前版本：0.2.0

## 许可证

MIT License
